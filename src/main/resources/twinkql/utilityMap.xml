<?xml version="1.0" encoding="UTF-8"?>
<sparqlMap namespace="util"
	xmlns="http://mayo.edu/twinkql" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://mayo.edu/twinkql https://raw.github.com/cts2/twinkql/master/src/main/castor/twinkql.xsd">
	
	<perRowResultMap id="idsResultMap" resultClass="edu.mayo.cts2.framework.plugin.service.bprdf.dao.id.IdResult">
		<rowMap var="id" varType="literalValue" beanProperty="id"/>
		<rowMap var="ontologyId" varType="literalValue" beanProperty="ontologyId"/>
		<rowMap var="acronym" varType="literalValue" beanProperty="acronym"/>
	</perRowResultMap>
	
	<perRowResultMap id="getDistinctNamespacesResultMap" resultClass="edu.mayo.cts2.framework.plugin.service.bprdf.dao.namespace.DistinctNamespaceResult">
		<if function="spring:isNotLiteral" param="result">
			<rowMap var="result" varType="namespace" beanProperty="namespace"/>
		</if>
	</perRowResultMap>
	
	<select id="getIds" resultMap="idsResultMap">
		SELECT ?id ?ontologyId ?acronym {
    		?ontologyVersion bpMetadata:isVersionOfVirtualOntology ?ontology ;
    			bpMetadata:id ?id ;
    			omv:acronym ?acronym .
    		?ontology bpMetadata:id ?ontologyId ;

		}
	</select>
	
	<select id="getDistinctNamespaces" resultMap="getDistinctNamespacesResultMap">
		SELECT DISTINCT ( ?#{var} AS result )
		WHERE 
		{
		    GRAPH bpOntologies:#{ontologyId} {
		    	?s ?p ?o.
		    	FILTER (ISURI(?#{var}) )    
			} 
	 	}
	</select>
</sparqlMap>
